# See dunst(5) for all configuration options

[global]
### Display ###

# Which monitor should the notifications be displayed on.
monitor = 0

# Display notification on focused monitor.  Possible modes are:
#   mouse: follow mouse pointer
#   keyboard: follow window with keyboard focus
#   none: don't follow anything
#
# "keyboard" needs a window manager that exports the
# _NET_ACTIVE_WINDOW property.
# This should be the case for almost all modern window managers.
#
# If this option is set to mouse or keyboard, the monitor option
# will be ignored.
follow = none

### Geometry ###

# dynamic width from 0 to 300
# width = (0, 300)
# constant width of 300
width = 400

# The maximum height of a single notification, excluding the.
height = 120

# Position the notification in the top right corner
# origin = top-right
origin = top-center

# Offset from the origin
offset = 0x75

# Scale factor. It is auto-detected if value is 0.
scale = 0

# Maximum number of notification (0 means no limit)
notification_limit = 10

### Progress bar ###

# Turn on the progess bar. It appears when a progress hint is passed with
# for example dunstify -h int:value:12
progress_bar = true

# Set the progress bar height. This includes the frame, so make sure
# it's at least twice as big as the frame width.
progress_bar_height = 5

# Set the frame width of the progress bar
progress_bar_frame_width = 0

# Set the minimum width for the progress bar
progress_bar_min_width = 150

# Set the maximum width for the progress bar
progress_bar_max_width = 300


# Show how many messages are currently hidden (because of
# notification_limit).
indicate_hidden = yes

# The transparency of the window.  Range: [0; 100].
# This option will only work if a compositing window manager is
# present (e.g. xcompmgr, compiz, etc.). (X11 only)
transparency = 0

# Draw a line of "separator_height" pixel height between two
# notifications.
# Set to 0 to disable.
# If gap_size is greater than 0, this setting will be ignored.
separator_height = 10

# Padding between text and separator.
padding = 20

# Horizontal padding.
horizontal_padding = 20

# Padding between text and icon.
text_icon_padding = 20

# Defines width in pixels of frame around the notification window.
# Set to 0 to disable.
frame_width = 0

# Defines color of the frame around the notification window.

# Size of gap to display between notifications - requires a compositor.
# If value is greater than 0, separator_height will be ignored and a border
# of size frame_width will be drawn around each notification instead.
# Click events on gaps do not currently propagate to applications below.
gap_size = 5

# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = frame

# Sort messages by urgency.
sort = yes

# Don't remove messages, if the user is idle (no mouse or keyboard input)
# for longer than idle_threshold seconds.
# Set to 0 to disable.
# A client can set the 'transient' hint to bypass this. See the rules
# section for how to disable this if necessary
idle_threshold = 120

### Text ###

font = "SF Mono 10"

# The spacing between lines.  If the height is smaller than the
# font height, it will get raised to the font height.
line_height = 2

# Possible values are:
# full: Allow a small subset of html markup in notifications:
#        <b>bold</b>
#        <i>italic</i>
#        <s>strikethrough</s>
#        <u>underline</u>
#
#        For a complete reference see
#        <https://docs.gtk.org/Pango/pango_markup.html>.
#
# strip: This setting is provided for compatibility with some broken
#        clients that send markup even though it's not enabled on the
#        server. Dunst will try to strip the markup but the parsing is
#        simplistic so using this option outside of matching rules for
#        specific applications *IS GREATLY DISCOURAGED*.
#
# no:    Disable markup parsing, incoming notifications will be treated as
#        plain text. Dunst will not advertise that it has the body-markup
#        capability if this is set as a global setting.
#
# It's important to note that markup inside the format option will be parsed
# regardless of what this is set to.
markup = no

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
format = "%s\n%b"

# Alignment of message text.
# Possible values are "left", "center" and "right".
alignment = left

# Vertical alignment of message text and icon.
# Possible values are "top", "center" and "bottom".
vertical_alignment = center

# Show age of message if message is older than show_age_threshold
# seconds.
# Set to -1 to disable.
show_age_threshold = 60

# Specify where to make an ellipsis in long lines.
# Possible values are "start", "middle" and "end".
ellipsize = end

# Ignore newlines '\n' in notifications.
ignore_newline = no

# Stack together notifications with the same content
stack_duplicates = true

# Hide the count of stacked notifications with the same content
hide_duplicate_count = false

# Display indicators for URLs (U) and actions (A).
show_indicators = no

### Icons ###

# Recursive icon lookup. You can set a single theme, instead of having to
# define all lookup paths.
enable_recursive_icon_lookup = true

# Set icon theme (only used for recursive icon lookup)
icon_theme = Sevi-grey-dark
# You can also set multiple icon themes, with the leftmost one being used first.
icon_theme = Sevi-grey-dark

# Align icons left/right/top/off
icon_position = left

# Scale small icons up to this size, set to 0 to disable. Helpful
# for e.g. small files or high-dpi screens. In case of conflict,
# max_icon_size takes precedence over this.
min_icon_size = 36

# Scale larger icons down to this size, set to 0 to disable
max_icon_size = 36
# Paths to default icons (only neccesary when not using recursive icon lookup)
icon_path = /usr/share/icons/gnome/16x16/status/:/usr/share/icons/gnome/16x16/devices/

### History ###

# Should a notification popped up from history be sticky or timeout
# as if it would normally do.
sticky_history = yes

# Maximum amount of notifications kept in history
history_length = 50

### Misc/Advanced ###

# dmenu path.
dmenu = /usr/bin/dmenu -p dunst:

# Browser for opening urls in context menu.
browser = /usr/bin/xdg-open

# Always run rule-defined scripts, even if the notification is suppressed
always_run_script = true

# Define the title of the windows spawned by dunst
title = Dunst

# Define the class of the windows spawned by dunst
class = Dunst

# Define the corner radius of the notification window
# in pixel size. If the radius is 0, you have no rounded
# corners.
# The radius will be automatically lowered if it exceeds half of the
# notification height to avoid clipping text and/or icons.
corner_radius = 2

# Ignore the dbus closeNotification message.
# Useful to enforce the timeout set by dunst configuration. Without this
# parameter, an application may close the notification sent before the
# user defined timeout.
ignore_dbusclose = false

### Wayland ###
# These settings are Wayland-specific. They have no effect when using X11

# Uncomment this if you want to let notications appear under fullscreen
# applications (default: overlay)
# layer = top

# Set this to true to use X11 output on Wayland.
force_xwayland = false

### Legacy

# Use the Xinerama extension instead of RandR for multi-monitor support.
# This setting is provided for compatibility with older nVidia drivers that
# do not support RandR and using it on systems that support RandR is highly
# discouraged.
#
# By enabling this setting dunst will not be able to detect when a monitor
# is connected or disconnected which might break follow mode if the screen
# layout changes.
force_xinerama = false

### mouse

# Defines list of actions for each mouse event
# Possible values are:
# * none: Don't do anything.
# * do_action: Invoke the action determined by the action_name rule. If there is no
#              such action, open the context menu.
# * open_url: If the notification has exactly one url, open it. If there are multiple
#             ones, open the context menu.
# * close_current: Close current notification.
# * close_all: Close all notifications.
# * context: Open context menu for the notification.
# * context_all: Open context menu for all notifications.
# These values can be strung together for each mouse event, and
# will be executed in sequence.
mouse_left_click = close_current
mouse_middle_click = do_action, close_current
mouse_right_click = close_all

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
# Calculate the dpi to use on a per-monitor basis.
# If this setting is enabled the Xft.dpi value will be ignored and instead
# dunst will attempt to calculate an appropriate dpi value for each monitor
# using the resolution and physical size. This might be useful in setups
# where there are multiple screens with very different dpi values.
per_monitor_dpi = false

# Get colors from Flavours ------------------------------------------
#                                                                   -
#--------------------------------------------------------------------

# Start Flavours
frame_color = "#2A2A37"
separator_color = "#eeeeee"
highlight = "#FFA263"

[base16_low]
    msg_urgency = low
    background = "#2A2A37"
    foreground = "#eeeeee"

[base16_normal]
    msg_urgency = normal
    background = "#2A2A37"
    foreground = "#eeeeee"

[base16_critical]
    msg_urgency = critical
    background = "#CD3F45"
    foreground = "#eeeeee"
# End Flavours



